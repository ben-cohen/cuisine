%% This is file `cuisine.sty'
%%
%% Recipe typesetting package `cuisine' by Ben Cohen.
%% 
%%
%%  $Log$
%%  Revision 1.25  2000/06/21 16:15:28  bjc23
%%  WRONG -- vert box NOT fixed
%%  rewrite?
%%
%%  Revision 1.24  2000/06/21 15:40:34  bjc23
%%  vertical box alignment problem seems to be fixed now, although may need
%%  a total re-write.
%%  however, the vertical spacing problem seems to be at least as bad now.
%%
%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Identification section
\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{cuisine}[2000/04/11 v0.1 recipe typesetting]
%
% Use the nicefrac package for "nice" fractions...
\RequirePackage{nicefrac}
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Variables and counters etc.
%
% r@cipenumber   - Recipe number counter
%                  This could be made dependent on, say, section.
\newcounter{r@cipenumber}
%
% command to reset it
\DeclareRobustCommand{\ResetRecipeCounter}{%
  \setcounter{r@cipenumber}{0}%
}
%
% st@pnumber   - Method counter (within recipes)
%                  It is zeroed whenever the recipe counter is incremented.
\newcounter{st@pnumber}[r@cipenumber]  
%
% ingr@dnumber   - Ingredient counter (within recipes)
%                  It is zeroed whenever the method counter is incremented.
\newcounter{ingr@dnumber}[st@pnumber]  
%
% ifnumb@ring    - Whether or not recipe numbers are printed 
%                  Method numbers will always be printed    
\newif\ifnumb@ring
%
% ifind@xing     - Whether writing the recipes to an index file or not
\newif\ifind@xing
%
% ifh@smethodtext - Whether the method body is empty or not
%\newif\ifh@smethodtext
%\h@smethodtextfalse
%
% And some dimensions:
%
% Total width
\newlength{\RecipeWidth}
%
% Width of the recipe number box
\newlength{\R@cipeNumberWidth}
%
% Width of the recipe title box
\newlength{\R@cipeTitleWidth}
%
% Width of the recipe number-of-servings box
\newlength{\R@cipeServingsWidth}
%
% And the sum of the last two
\newlength{\R@cipeTandSWidth}
%
% Height of the recipe title to rule adjustments (usually negative)
\newlength{\R@cipeTitleVerticalAdjustTop}
\newlength{\R@cipeTitleVerticalAdjustBot}
%
% Width of the ingredients
\newlength{\R@cipeIngredientWidth}
\newlength{\R@cipeQuantityWidth}
\newlength{\R@cipeUnitsWidth}
\newlength{\R@cipeQandUWidth}   % total of the previous two...
\newlength{\R@cipeIQUWidth}   % total of the previous two...
%
% Width of the method text
\newlength{\R@cipeMethodWidth}
%
% Temporary use
\newlength{\R@cipeTemp}
%
% Relevant definitions for setting the above values:
%
%   #1 is the ingredient width, #2 the quantity, #3 the units
%   others calculated
\DeclareRobustCommand*{\RecipeMethodWidths}[3]{%
  \setlength{\R@cipeIngredientWidth}{#1}%
  \setlength{\R@cipeQuantityWidth}{#2}%
  \setlength{\R@cipeUnitsWidth}{#3}%
  \setlength{\R@cipeQandUWidth}{\R@cipeQuantityWidth}%
  \addtolength{\R@cipeQandUWidth}{\R@cipeUnitsWidth}%
  \setlength{\R@cipeIQUWidth}{\R@cipeQandUWidth}%
  \addtolength{\R@cipeIQUWidth}{\R@cipeIngredientWidth}%
  \addtolength{\R@cipeIQUWidth}{0.5cm}%
  \setlength{\R@cipeMethodWidth}{\RecipeWidth}
  \addtolength{\R@cipeMethodWidth}{-\R@cipeNumberWidth}%
  \addtolength{\R@cipeMethodWidth}{-\R@cipeIngredientWidth}%
  \addtolength{\R@cipeMethodWidth}{-\R@cipeQandUWidth}%
% deal with the space between columns
  \addtolength{\R@cipeMethodWidth}{-0.5cm}%
}%
%
%   #1 is the recipe number width, #2 the number of servings
%   title width calculated, updates method widths too
\DeclareRobustCommand*{\RecipeTitleWidths}[2]{%
  \setlength{\R@cipeNumberWidth}{#1}%
  \setlength{\R@cipeServingsWidth}{#2}%
  \setlength{\R@cipeTitleWidth}{\RecipeWidth}%
  \addtolength{\R@cipeTitleWidth}{-\R@cipeNumberWidth}%
  \addtolength{\R@cipeTitleWidth}{-\R@cipeServingsWidth}%
  \setlength{\R@cipeTandSWidth}{\R@cipeServingsWidth}%
  \addtolength{\R@cipeTandSWidth}{\R@cipeTitleWidth}%
  \RecipeMethodWidths{\R@cipeIngredientWidth}{\R@cipeQuantityWidth}%
                     {\R@cipeUnitsWidth}%
}
%
% default values:  
%     These appear to be reasonable for the LaTeX default page layout.
%     (A4, portrait, one column, etc.)
%     I don't think the LaTeX defaults are sensible for a recipe book though!
\setlength{\RecipeWidth}{\textwidth}
\RecipeTitleWidths{0.8cm}{3cm}
\RecipeMethodWidths{3.5cm}{0.7cm}{2cm}
\setlength{\R@cipeTitleVerticalAdjustTop}{-0.25cm}
\setlength{\R@cipeTitleVerticalAdjustBot}{-0.04cm}
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Boxes
\newsavebox{\m@thodbox}
\newsavebox{\m@thodtempbox}
\newsavebox{\m@thodqtybox}
\newsavebox{\st@pmethodbox}
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Options 
%
% nonumber - Should recipes be numbered?               Default - yes
\DeclareOption{number}{\numb@ringtrue}
\DeclareOption{nonumber}{\numb@ringfalse}
%
% index    - Should recipes be indexed to a file?      Default - no
\DeclareOption{index}{\ind@xingtrue}
\DeclareOption{noindex}{\ind@xingfalse}
%
% Process the options, using defaults
\ExecuteOptions{number,noindex}
\ProcessOptions\relax
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% The ingredient/method macros
%
%  \DisplaySt@p -- Displays the ingredients and method for the current step
%                  and resets things
\DeclareRobustCommand{\DisplaySt@p}{%
  \stepcounter{st@pnumber}%
% Put extra vertical space between steps.  But it isn't uniform yet.
  \vskip0.2cm%
% Display this step.
  \makebox[\RecipeWidth]{%
    \makebox[\R@cipeNumberWidth][c]{\arabic{st@pnumber}}%
    \usebox{\m@thodbox}%
    \usebox{\st@pmethodbox}%
  }%
% Clear the step storage boxes.
  \savebox{\m@thodbox}[\R@cipeIQUWidth]{}
  \savebox{\st@pmethodbox}[\R@cipeMethodWidth]{}
%
}%
%
%  This happens at the start of ingredients (= end of method)
\DeclareRobustCommand{\pr@ingred}{%
  \endminipage\end{lrbox}%
  % Here we compare the width of the \st@pmethodbox with zero to determine
  % whether anything was entered into it.
  \ifdim\wd\st@pmethodbox=0in%
%    \PackageWarning{cuisine}{No text}%  % use for testing
  \else%
%    \PackageWarning{cuisine}{Method text}%
    \DisplaySt@p%
  \fi%
}%
%  And at the end of ingredients (= start of method)
\DeclareRobustCommand{\p@stingred}{%
  %
  %  This is very odd.  Using \begin{lrbox}...\end{lrbox} isn't
  %  supposed to work properly over an environment definition (and doesn't
  %  seem to, either).  So we use \lrbox...\endlrbox.  But we want to nest
  %  a \minipage inside this, which fails.  But it does work with 
  %  \begin{lrbox}\minipage...\endminipage\end{lrbox}.  WHY????!!!
  %
  \begin{lrbox}{\st@pmethodbox}\minipage[t]{\R@cipeMethodWidth}%
  \noindent%    might be sensible...
  \ignorespaces%
}%
%
%  The \m@thodend command (which is \nextstep in the environment)
\DeclareRobustCommand{\m@thodend}{%
  %\pr@ingred%  % we don't do this: we want to *force* the new step
  \endminipage\end{lrbox}%
  % fill in the method box in case there isn't one yet:
  \ifdim\wd\st@pmethodbox=0in%
    \savebox{\st@pmethodbox}[\R@cipeMethodWidth]{\mbox{}}%
  \fi%
  \DisplaySt@p%
  \ifnum\value{st@pnumber}=0%
    % don't need to do much here...
  \else%
    % 
  \fi%
%  \ifnum\value{ingr@dnumber}=0%
%  \else%
%  \fi%
  \p@stingred%
}%
%
%
%  The \ingredient command
\DeclareRobustCommand{\ingr@dient}[3][]{%
  \pr@ingred%
  \ifnum\value{st@pnumber}=0%
    % don't need to do much here...
  \else%
    % 
  \fi%
  \ifnum\value{ingr@dnumber}=0%
    % don't need to do much here...
  \else%
    % process the previous method section, if there was one...
    %
    % first: is m@thoddetailbox empty?
  \fi%
%
% The following is the main bit to typeset the ingredients list.
% Thanks to , comp.text.tex for help with aligning box baselines.
%
%
%
% WAS:
% hack to see if #1 is empty - is there a better way? 
%  \def\@Raaa{z}\def\@Rbbb{z#1}%
%  \ifx\@Raaa\@Rbbb%
% NOW:  (Patrick Guio, comp.text.tex)
  \ifx\relax#1\relax%
    \savebox{\m@thodqtybox}[\R@cipeQandUWidth]{%
      \parbox[b]{\R@cipeQandUWidth}{#2}%
    }%
  \else%
    \savebox{\m@thodqtybox}{%   
      \begin{minipage}[b]{\R@cipeQandUWidth}\lineskip0pt %
          \parbox[b]{\R@cipeQuantityWidth}{\rule{0pt}{\baselineskip}%
             \hfill #1\rule{0.1cm}{0cm}}%
          \parbox[t]{\R@cipeUnitsWidth}{#2\hfill}%
          \\[-\baselineskip]\mbox{}%
      \end{minipage}%
    }%
  \fi%
  \savebox{\m@thodtempbox}{\usebox{\m@thodbox}}%
  \savebox{\m@thodbox}{%
    \begin{minipage}[t]{\R@cipeIQUWidth}%
      \parbox[t]{\R@cipeIQUWidth}{%
        \ifnum\value{ingr@dnumber}>0%
          \usebox{\m@thodtempbox}\par%
          \strut\usebox{\m@thodqtybox}\rule{0.2cm}{0cm}%
          \parbox[t]{\R@cipeIngredientWidth}{#3}%
        \else%
          \lineskip0pt\mbox{}\\[-\baselineskip]%
          \parbox[b]{\R@cipeQandUWidth}{\rule{0pt}{\baselineskip}\strut%
            \usebox{\m@thodqtybox}}%
          \rule{0.2cm}{0cm}%
          \parbox[t]{\R@cipeIngredientWidth}{#3}%
        \fi%
      }%
    \end{minipage}%
  }%
%
%  \usebox{\m@thodbox}    % For testing: show cumulative boxes
  \stepcounter{ingr@dnumber}%
  \p@stingred%
}%
%
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% The recipe environment
%   #1 = title, #2 = portions, #3 = preparation time
\newenvironment{recipe}[3]{%
  % These are the things that are put at the start of recipes:
  %
  % -- set-up things
  \stepcounter{r@cipenumber}
  \let\nextstep\m@thodend
  \let\0\d@grees
  \let\fr\fr@ction
  \let\ing\ingr@dient
  \let\ingredient\ingr@dient
%  \setlength{\R@cipeTempParindent}{\parindent}
  \setlength{\parindent}{0pt}
  \savebox{\m@thodbox}[\R@cipeIQUWidth]{}
  \savebox{\st@pmethodbox}[\R@cipeMethodWidth]{}
  %
  % -- and the actual displayed title

  \bigskip
  \pagebreak[0]
  % ---- line 1
  \mbox{%
    \ifnumb@ring%
      \makebox[\R@cipeNumberWidth][c]{\arabic{r@cipenumber}}%
      \parbox[b]{\R@cipeTitleWidth}{#1}%
    \else%
      \parbox[b]{\R@cipeTitleWidth}{#1}%
      \makebox[\R@cipeNumberWidth]{}%
    \fi%
    \parbox[b]{\R@cipeServingsWidth}{\hfill #2}%
  }\par%
  \nopagebreak    % we don't want page breaks during the title
  %
  %  (NOTE: I want to get the recipe number aligned with the TOP of the title
  %   in the case of multi-line titles, but I can seem to get it to work.  Why?)
  %
  % ---- rule
  \vspace{\R@cipeTitleVerticalAdjustTop}%
  \nopagebreak
  \rule{\RecipeWidth}{0.4pt}\par%
  \nopagebreak
  \vspace{\R@cipeTitleVerticalAdjustBot}%
  \nopagebreak
  %
  % ---- line 2
  \makebox[\RecipeWidth][r]{#3}\par%
  \nopagebreak
  %
  %
  \p@stingred%
}%
{%%%%%%%%%%
  % And these are the things put at the end of recipes:  
  \pr@ingred%
  \ifnum\value{st@pnumber}=0%  then complain!
    \PackageWarning{cuisine}{The recipe did not have any method details}%
  \else%
  \fi%
  %
  % -- tidying up
  \bigskip
%  \setlength{\parindent}{\R@cipeTempParindent} % not apparently necessary
% Undo \let\*  -- but this seems to be handled automatically by LaTeX
}%
%
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Miscellaneous useful macros
%
% degrees        - to typeset a degrees symbol
\DeclareRobustCommand{\d@grees}{%
  ${}^\circ$%
}%
%
% fr             - to typeset fractions, currently using package nicefrac
\DeclareRobustCommand{\fr@ction}[2]{%
  \nicefrac#1#2%
}%
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% That's it...
%
\endinput%
%
% END OF FILE
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
